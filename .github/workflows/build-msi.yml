name: Build Fortuna Faucet MSI Installer

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-installer:
    name: Build MSI Installer
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            electron/package-lock.json
            web_platform/frontend/package-lock.json

      - name: Install Frontend Dependencies & Build
        run: |
          cd web_platform/frontend
          npm ci
          npm run build

      - name: Stage Frontend Assets for Packaging
        shell: cmd
        run: |
          cd electron
          if exist web-ui-build (rmdir /s /q web-ui-build)
          mkdir web-ui-build
          robocopy ../web_platform/frontend/out web-ui-build/out /E
          if %ERRORLEVEL% LEQ 7 (exit /b 0) else (exit /b %ERRORLEVEL%)

      - name: Install Electron Dependencies
        run: |
          cd electron
          npm ci

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build Backend Executable with PyInstaller
        run: |
          pip install -r requirements-dev.txt
          pyinstaller --onefile --hidden-import=uvicorn --add-data "python_service/adapters;adapters" python_service/api.py
        shell: bash

      - name: Verify Build Inputs
        run: |
          echo "--- Verifying contents of electron/web-ui-build ---"
          ls -R electron/web-ui-build
          echo "--- Verifying contents of python_service/dist ---"
          ls -R python_service/dist

      - name: Build MSI Installer using electron-builder
        run: |
          cd electron
          npm run dist
          echo "--- Verifying contents of electron/dist ---"
          ls -R dist
        env:
          FORTUNA_BUILD_TYPE: 'full' # For now, we only build the full version
          DEBUG: 'electron-builder'

      - name: Generate sanitized artifact name
        id: sanitize
        shell: bash
        run: echo "name=fortuna-faucet-installer-$(echo ${{ github.ref_name }} | sed 's/\//-/g')" >> $GITHUB_OUTPUT

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.sanitize.outputs.name }}
          path: "electron/dist/JBMason's 1st App*.msi"
          retention-days: 30

      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: "electron/dist/JBMason's 1st App*.msi"
          name: "JBMason's 1st App ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
