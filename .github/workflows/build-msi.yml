name: Build Fortuna Faucet MSI Installer

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-installer:
    name: Build MSI Installer
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            electron/package-lock.json
            web_platform/frontend/package-lock.json

      - name: Install Frontend Dependencies & Build
        run: |
          cd web_platform/frontend
          npm ci
          npm run build

      - name: Stage Frontend Assets for Packaging
        shell: powershell
        run: |
          $source = "web_platform/frontend/out"
          $dest = "electron/web-ui-build/out"
          if (Test-Path $dest) {
            Remove-Item -Recurse -Force $dest
          }
          Copy-Item -Path $source -Destination $dest -Recurse -Force -ErrorAction Stop
          $sourceFiles = (Get-ChildItem -Path $source -Recurse | Measure-Object).Count
          $destFiles = (Get-ChildItem -Path $dest -Recurse | Measure-Object).Count
          if ($destFiles -ne $sourceFiles) {
            Write-Error "File count mismatch after staging frontend assets!"
            exit 1
          }
          Write-Host "Successfully staged $destFiles frontend assets."

      - name: Install Electron Dependencies
        run: |
          cd electron
          npm ci

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Build Backend Executable with PyInstaller
        shell: bash
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
          pyinstaller --onefile \
            --name fortuna-backend \
            --hidden-import=fastapi \
            --hidden-import=pydantic \
            --hidden-import=structlog \
            --hidden-import=httpx \
            --hidden-import=redis \
            --add-data "python_service/adapters:adapters" \
            python_service/api.py

      - name: Stage Backend Executable
        shell: bash
        run: |
          mkdir -p electron/resources
          cp dist/fortuna-backend.exe electron/resources/
          if [ ! -f "electron/resources/fortuna-backend.exe" ]; then
            echo "Failed to copy backend executable!"
            exit 1
          fi
          echo "Backend executable staged successfully."

      - name: Verify Build Inputs
        shell: bash
        run: |
          if [ ! -f "electron/resources/fortuna-backend.exe" ]; then
            echo "CRITICAL: Backend executable not found!"
            exit 1
          fi
          if [ ! -d "electron/web-ui-build/out" ]; then
            echo "CRITICAL: Frontend build directory not found!"
            exit 1
          fi
          echo "All critical artifacts verified."

      - name: Build MSI Installer using electron-builder
        run: |
          cd electron
          npm run dist
          echo "--- Verifying contents of electron/dist ---"
          ls -R dist
        env:
          FORTUNA_BUILD_TYPE: 'full' # For now, we only build the full version
          DEBUG: 'electron-builder'

      - name: Generate sanitized artifact name
        id: sanitize
        shell: bash
        run: echo "name=fortuna-faucet-installer-$(echo ${{ github.ref_name }} | sed 's/\//-/g')" >> $GITHUB_OUTPUT

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.sanitize.outputs.name }}
          path: "electron/dist/Fortuna Faucet*.msi"
          retention-days: 30

      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: "electron/dist/Fortuna Faucet*.msi"
          name: "Fortuna Faucet ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
