# setup_wizard.py
import secrets
import os

DOTENV_PATH = '.env'
DOTENV_FULL_EXAMPLE_PATH = '.env.full.example'

def generate_api_key():
    """Generates a secure, URL-safe API key."""
    return secrets.token_urlsafe(32)

def run_quick_start():
    """
    'Quick Start' setup. Creates a .env file with only the essential,
    automatically generated API_KEY.
    """
    print("--- Fortuna Faucet Quick Start Setup ---")

    if os.path.exists(DOTENV_PATH):
        print(f"✅ An existing '{DOTENV_PATH}' file was found. Setup is already complete.")
        print("To re-run setup, please delete the existing .env file.")
        return

    api_key = generate_api_key()

    try:
        with open(DOTENV_PATH, 'w') as f:
            f.write(f'# Auto-generated by Fortuna Faucet Setup Wizard\n')
            f.write(f'API_KEY="{api_key}"\n\n')
            f.write('# To enable advanced features, see .env.full.example\n')

        print(f"✅ Successfully created '{DOTENV_PATH}' with a new secure API key.")
        print("\nQuick Start is complete! You can now launch the application.")

    except IOError as e:
        print(f"❌ ERROR: Could not write to '{DOTENV_PATH}'. Please check file permissions.")
        print(e)

def create_advanced_template():
    """
    Creates the .env.full.example for advanced users.
    """
    template = """# .env.full.example
# For advanced users. Copy these contents to your .env file to enable them.

# --- Application Security (Required) ---
# This is automatically generated by the setup wizard.
# API_KEY="YOUR_SECRET_API_KEY_HERE"

# --- Betfair API Credentials (Required for LiveOddsMonitor) ---
BETFAIR_APP_KEY="YOUR_APP_KEY_HERE"
BETFAIR_USERNAME="YOUR_USERNAME_HERE"
BETFAIR_PASSWORD="YOUR_PASSWORD_HERE"

# --- Optional Adapter Keys ---
TVG_API_KEY=""
RACING_AND_SPORTS_TOKEN=""
POINTSBET_API_KEY=""

# --- CORS Configuration (Optional) ---
ALLOWED_ORIGINS="http://localhost:3000"

# --- Greyhound Adapter (Optional) ---
GREYHOUND_API_URL=""

# --- The Racing API (Optional but Recommended) ---
THE_RACING_API_KEY=""

# --- Optional Caching Backend ---
REDIS_URL=""
"""
    try:
        with open(DOTENV_FULL_EXAMPLE_PATH, 'w') as f:
            f.write(template)
        print(f"✅ Advanced configuration template created at '{DOTENV_FULL_EXAMPLE_PATH}'")
    except IOError:
        pass # Don't bother users if this fails

if __name__ == '__main__':
    run_quick_start()
    create_advanced_template()
    print("\n-------------------------------------------")
    input("Press Enter to exit...")
