{
    "file_path": "tests/test_models.py",
    "content": "# Test suite for Pydantic models, resurrected from attic/legacy_tests_pre_triage/checkmate_v7/test_models.py\nimport pytest\nfrom pydantic import ValidationError\nfrom python_service.models import Race, Runner\nimport datetime\n\ndef test_runner_model_creation():\n    \"\"\"Tests basic successful creation of the Runner model.\"\"\"\n    runner = Runner(number=5, name='Test Horse', odds='5/1', scratched=False)\n    assert runner.number == 5\n    assert runner.name == 'Test Horse'\n    assert not runner.scratched\n\ndef test_race_model_with_valid_runners():\n    \"\"\"Tests basic successful creation of the Race model.\"\"\"\n    runner1 = Runner(number=1, name='A', odds='2/1', scratched=False)\n    runner2 = Runner(number=2, name='B', odds='3/1', scratched=False)\n    race = Race(\n        id='test-race-1',\n        venue='TEST',\n        race_number=1,\n        start_time=datetime.datetime.now(),\n        runners=[runner1, runner2],\n        source='test'\n    )\n    assert race.venue == 'TEST'\n    assert len(race.runners) == 2\n\ndef test_model_validation_fails_on_missing_required_field():\n    \"\"\"Ensures Pydantic's validation fires for missing required fields.\"\"\"\n    with pytest.raises(ValidationError):\n        # 'name' is a required field for a Runner\n        Runner(number=3, odds='3/1', scratched=False)\n\n    with pytest.raises(ValidationError):\n        # 'venue' is a required field for a Race\n        Race(\n            id='test-race-2',\n            race_number=2,\n            start_time=datetime.datetime.now(),\n            runners=[],\n            source='test'\n        )"
}