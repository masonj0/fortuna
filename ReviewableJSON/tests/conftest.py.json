{
    "file_path": "tests/conftest.py",
    "content": "# tests/conftest.py\nimport pytest\nfrom fastapi.testclient import TestClient\nfrom python_service.api import app\nimport httpx\nfrom unittest.mock import Mock\nimport os\n\n@pytest.fixture(scope=\"module\")\ndef client():\n    \"\"\"A TestClient instance for testing the FastAPI app.\"\"\"\n    with TestClient(app) as c:\n        yield c\n\n@pytest.fixture\ndef mock_httpx_client():\n    \"\"\"Mocks the httpx.AsyncClient for testing adapters.\"\"\"\n    return Mock(spec=httpx.AsyncClient)\n\n@pytest.fixture(scope=\"session\", autouse=True)\ndef setup_test_environment():\n    \"\"\"\n    Creates a dummy .env file in the project root for the test suite and\n    ensures it's loaded.\n    \"\"\"\n    env_content = 'API_KEY=\"test_api_key\"'\n    env_path = \".env\"\n    with open(env_path, \"w\") as f:\n        f.write(env_content)\n\n    # Force reload of settings to pick up the new .env file\n    from python_service.config import get_settings\n    get_settings.cache_clear()\n\n    yield\n\n    os.remove(env_path)\n    get_settings.cache_clear()\n"
}